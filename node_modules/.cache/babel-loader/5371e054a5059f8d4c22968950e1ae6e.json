{"ast":null,"code":"var _jsxFileName = \"/home/exdevs-03/Documents/Workspace/BCP-13/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Header from \"./Components/Header/Header\";\nimport Sidebar from \"./Components/Sidebar/Sidebar\";\nimport Footer from \"./Components/Footer/Footer\";\nimport Home from \"./Components/Home/Home\";\nimport { Grid, ThemeProvider } from \"@mui/material\";\nimport { useMediaQuery, useTheme } from \"@material-ui/core\";\nimport FontTheme from \"./Themes/FontTheme\";\nimport Tryon from \"./Components/Tryon/Tryon\";\nimport Login from \"./Components/Login/Login\";\nimport FirstLogin from \"./Components/Login/FirstLogin\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport { HOME, TRYON, LOGIN, FIRSTLOGIN } from \"./Routes/Routes\";\nimport { useSelector } from \"react-redux\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const theme = useTheme();\n  const value = useSelector(store => store.Pathname);\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"xs\"));\n  const fontTheme = FontTheme();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [console.log(\"Value: \" + value), /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n        theme: fontTheme,\n        children: [value !== \"login\" && /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 9,\n            children: /*#__PURE__*/_jsxDEV(Routes, {\n              children: [/*#__PURE__*/_jsxDEV(Route, {\n                exact: true,\n                path: TRYON,\n                element: /*#__PURE__*/_jsxDEV(Tryon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 32,\n                  columnNumber: 52\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                exact: true,\n                path: HOME,\n                element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 33,\n                  columnNumber: 51\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Routes, {\n            children: [value == 'login' && /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: LOGIN,\n              element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 68\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 33\n            }, this), value == 'login' && /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: FIRSTLOGIN,\n              element: /*#__PURE__*/_jsxDEV(FirstLogin, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 73\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 0,\n            sm: 3,\n            children: value !== \"login\" && !isMobile && /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 30\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"q3rtgE7XykIuFdQNNqhb468vtTY=\", false, function () {\n  return [useTheme, useSelector, useMediaQuery];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/exdevs-03/Documents/Workspace/BCP-13/src/App.js"],"names":["React","Header","Sidebar","Footer","Home","Grid","ThemeProvider","useMediaQuery","useTheme","FontTheme","Tryon","Login","FirstLogin","BrowserRouter","Router","Route","Routes","HOME","TRYON","LOGIN","FIRSTLOGIN","useSelector","App","theme","value","store","Pathname","isMobile","breakpoints","down","fontTheme","console","log"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Header from \"./Components/Header/Header\";\nimport Sidebar from \"./Components/Sidebar/Sidebar\";\nimport Footer from \"./Components/Footer/Footer\";\nimport Home from \"./Components/Home/Home\";\nimport { Grid, ThemeProvider } from \"@mui/material\";\nimport { useMediaQuery, useTheme } from \"@material-ui/core\";\nimport FontTheme from \"./Themes/FontTheme\";\nimport Tryon from \"./Components/Tryon/Tryon\";\nimport Login from \"./Components/Login/Login\";\nimport FirstLogin from \"./Components/Login/FirstLogin\";\nimport { BrowserRouter as Router, Route, Routes} from \"react-router-dom\";\nimport { HOME, TRYON, LOGIN, FIRSTLOGIN } from \"./Routes/Routes\";\nimport { useSelector } from \"react-redux\";\nimport \"./App.css\";\n\nconst App = () => {\n  const theme = useTheme();\n  const value = useSelector((store)=>store.Pathname);\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"xs\"));\n  const fontTheme = FontTheme();\n\n  return (\n    <>\n    {console.log(\"Value: \"+value)}\n      <Router>\n        <ThemeProvider theme={fontTheme}>\n          {value!==\"login\" && <Header />}\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={9}>\n              <Routes>\n                <Route exact path={TRYON} element={<Tryon />} />\n                <Route exact path={HOME} element={<Home />} />\n              </Routes>\n            </Grid>\n            <Routes>\n             {value=='login' && <Route exact path={LOGIN} element={<Login />} />} \n             {value=='login' && <Route exact path={FIRSTLOGIN} element={<FirstLogin />} />}\n            </Routes>\n            <Grid item xs={0} sm={3}>\n              {value !==\"login\" &&\n                !isMobile && <Sidebar />}\n            </Grid>\n          </Grid>\n          <Footer />\n        </ThemeProvider>\n      </Router>\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}